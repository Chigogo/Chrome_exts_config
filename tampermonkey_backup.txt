{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"解决百度云大文件下载限制","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://pan.baidu.com/*","https://pan.baidu.com/*","http://yun.baidu.com/*","https://yun.baidu.com/*","https://eyun.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1484058147367},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/17800-%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6/code/%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6.user.js","uuid":"3d782ff5-aa8f-4f01-a1e1-cf349ceefd4e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDop6PlhrPnmb7luqbkupHlpKfmlofku7bkuIvovb3pmZDliLYKLy8gQG5hbWVzcGFjZSAgICB1bmRlZmluZWQKLy8gQHZlcnNpb24gICAgICAwLjAuNgovLyBAZGVzY3JpcHRpb24gIOS4gOihjOS7o+egge+8jOino+WGs+eZvuW6puS6keWkp+aWh+S7tuS4i+i9vemZkOWItgovLyBAYXV0aG9yICAgICAgIGZ1bmlhbnd1eGluCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3Bhbi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcGFuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3l1bi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8veXVuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9leXVuLmJhaWR1LmNvbS8qCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQovKiBqc2hpbnQgLVcwOTcgKi8KJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KE9iamVjdC5nZXRQcm90b3R5cGVPZihuYXZpZ2F0b3IpLCdwbGF0Zm9ybScse2dldDpmdW5jdGlvbigpe3JldHVybiAnc2JfYmFpZHUnO319KQoKCihmdW5jdGlvbigpewp2YXIgaHJlZj1sb2NhdGlvbi5ocmVmOwovaHR0cDovLnRlc3QoaHJlZik/bG9jYXRpb24uaHJlZj0naHR0cHMnK2hyZWYuc2xpY2UoNCk6MDsKfSgpKTsKCgogICAg"},{"name":"Google: Bypass Result Page Redirect","options":{"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/^https?://(?:www|encrypted|ipv[46])\\.google\\.[^/]+/(?:$|[#?]|search|webhp|imgres)/"],"orig_matches":["https://news.google.com/*","https://cse.google.com/cse/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"data":{},"ts":1484058147369},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/14150-google-%E7%BB%95%E8%BF%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E7%BD%91%E9%A1%B5%E9%93%BE%E6%8E%A5%E9%87%8D%E5%AE%9A%E5%90%91/code/Google%EF%BC%9A%E7%BB%95%E8%BF%87%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E7%BD%91%E9%A1%B5%E9%93%BE%E6%8E%A5%E9%87%8D%E5%AE%9A%E5%90%91.user.js","uuid":"a31952f9-536b-4c35-ac7c-4c6bfe2ed3e7","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgIFZBX2kKLy8gQHZlcnNpb24gICAgIDcuMS4wLjIwMTcwMjEzCi8vIEBncmFudCAgICAgICB1bnNhZmVXaW5kb3cKLy8gQGluY2x1ZGUgICAgIC9eaHR0cHM/Oi8vKD86d3d3fGVuY3J5cHRlZHxpcHZbNDZdKVwuZ29vZ2xlXC5bXi9dKy8oPzokfFsjP118c2VhcmNofHdlYmhwfGltZ3JlcykvCi8vIEBtYXRjaCAgICAgICBodHRwczovL25ld3MuZ29vZ2xlLmNvbS8qCi8vIEBtYXRjaCAgICAgICBodHRwczovL2NzZS5nb29nbGUuY29tL2NzZS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1zdGFydAovLyBAbmFtZSAgICAgICAgR29vZ2xlOiBCeXBhc3MgUmVzdWx0IFBhZ2UgUmVkaXJlY3QKLy8gQG5hbWU6emgtQ04gIEdvb2dsZe+8mue7lei/h+aQnOe0oue7k+aenOe9kemhtemTvuaOpemHjeWumuWQkQovLyBAbmFtZTp6aC1UVyAgR29vZ2xl77ya57me6YGO5pCc5bCL57WQ5p6c57ay6aCB6Y+I5o6l6YeN5a6a5ZCRCi8vIEBkZXNjcmlwdGlvbiBBdm9pZCBHb29nbGUgcmVkaXJlY3QgZm9yIHNlYXJjaCByZXN1bHQgcGFnZXMuCi8vIEBkZXNjcmlwdGlvbjp6aC1DTiDku6QgR29vZ2xlIOebtOaOpemTvuaOpeiHs+aQnOe0oue7k+aenOe9kemhte+8jOaXoOmhu+mHjeWumuWQkeOAggovLyBAZGVzY3JpcHRpb246emgtVFcg5LukIEdvb2dsZSDnm7TmjqXpj4jmjqXoh7PmkJzlsIvntZDmnpzntrLpoIHvvIznhKHpoIjph43lrprlkJHjgIIKLy8gPT0vVXNlclNjcmlwdD09Cgp1bnNhZmVXaW5kb3cuRnVuY3Rpb24oKGZ1bmN0aW9uICgpIHsKCnZhciBkZWJ1ZyA9IGZhbHNlOwp2YXIgY291bnQgPSAwOwoKLy8gd2ViIHBhZ2VzOiB1cmw/dXJsPQovLyBjdXN0b20gc2VhcmNoIGVuZ2luZTogdXJsP3E9Ci8vIG1hbHdhcmU6IGludGVyc3RpdGlhbD91cmw9CnZhciByZSA9IC9cYnVybFw/Lio/XGIoPzp1cmx8cSk9KGh0dHBzP1xiW14mI10rKS9pOwp2YXIgcmVzdG9yZSA9IGZ1bmN0aW9uIChsaW5rLCB1cmwpIHsKICB1cmwgPSB1cmwgfHwgbGluay5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSB8fCAnJzsKICB2YXIgbWF0Y2hlcyA9IHVybC5tYXRjaChyZSk7CiAgaWYgKG1hdGNoZXMpIHsKICAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoZXNbMV0pKTsKICAgIGxpbmsuc2V0QXR0cmlidXRlKCdyZWwnLCAnbm9yZWZlcnJlcicpOwogICAgbGluay5zZXRBdHRyaWJ1dGUoJ3JlZmVycmVycG9saWN5JywgJ25vLXJlZmVycmVyJyk7CiAgfSBlbHNlIGlmICh1cmwpIHsKICAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTsKICB9Cn07Cgp2YXIgZmFrZUxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CnZhciBub3JtYWxpemVVcmwgPSBmdW5jdGlvbiAodXJsKSB7CiAgZmFrZUxpbmsuaHJlZiA9IHVybDsKICByZXR1cm4gZmFrZUxpbmsuaHJlZjsKfTsKCnZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodikgewogIHYgPSBTdHJpbmcodik7ICAvLyBpbiBjYXNlIGFuIG9iamVjdCBpcyBwYXNzZWQgYnkgY2xldmVyIEdvb2dsZQogIGRlYnVnICYmIGNvbnNvbGUubG9nKCdzZXQnLCB0aGlzLl94X2lkLCB0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpLCB2KTsKICByZXN0b3JlKHRoaXMsIHYpOwp9Owp2YXIgZ2V0dGVyID0gZnVuY3Rpb24gKCkgewogIGRlYnVnICYmIGNvbnNvbGUubG9nKCdnZXQnLCB0aGlzLl94X2lkLCB0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpKTsKICByZXR1cm4gbm9ybWFsaXplVXJsKHRoaXMuZ2V0QXR0cmlidXRlKCdocmVmJykpOwp9Owp2YXIgYmxvY2tlciA9IGZ1bmN0aW9uIChldmVudCkgewogIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogIHJlc3RvcmUodGhpcyk7CiAgZGVidWcgJiYgY29uc29sZS5sb2coJ2Jsb2NrJywgdGhpcy5feF9pZCwgdGhpcy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSk7Cn07Cgp2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIChhKSB7CiAgaWYgKGEuX3hfaWQpIHsKICAgIHJldHVybjsKICB9CiAgYS5feF9pZCA9ICsrY291bnQ7CiAgaWYgKE9iamVjdC5kZWZpbmVQcm9wZXJ0eSkgewogICAgZGVidWcgJiYgY29uc29sZS5sb2coJ2RlZmluZSBwcm9wZXJ0eScsIGEuX3hfaWQpOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsICdocmVmJywge2dldDogZ2V0dGVyLCBzZXQ6IHNldHRlcn0pOwogIH0gZWxzZSBpZiAoYS5fX2RlZmluZVNldHRlcl9fKSB7CiAgICBkZWJ1ZyAmJiBjb25zb2xlLmxvZygnZGVmaW5lIGdldHRlcicsIGEuX3hfaWQpOwogICAgYS5fX2RlZmluZVNldHRlcl9fKCdocmVmJywgc2V0dGVyKTsKICAgIGEuX19kZWZpbmVHZXR0ZXJfXygnaHJlZicsIGdldHRlcik7CiAgfSBlbHNlIHsKICAgIGRlYnVnICYmIGNvbnNvbGUubG9nKCdkZWZpbmUgbGlzdGVuZXInLCBhLl94X2lkKTsKICAgIGEub25tb3VzZWVudGVyID0gYS5vbm1vdXNlbW92ZSA9IGEub25tb3VzZXVwID0gYS5vbm1vdXNlZG93biA9CiAgICAgIGEub25kYmNsaWNrID0gYS5vbmNsaWNrID0gYS5vbmNvbnRleHRtZW51ID0gYmxvY2tlcjsKICB9CiAgZGVidWcgJiYgYS5zZXRBdHRyaWJ1dGUoJ3gtaWQnLCBhLl94X2lkKTsKICByZXN0b3JlKGEpOwp9OwoKdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uICgpIHsKICBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbaHJlZl0nKSkuZm9yRWFjaChoYW5kbGVyKTsKfTsKCnZhciB0aWQgPSBudWxsOwp2YXIgcHJldiA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7CnZhciBjaGVjayA9IGZ1bmN0aW9uIChtdXRhdGlvbikgewogIHJldHVybiBtdXRhdGlvbi5hZGRlZE5vZGVzLmxlbmd0aCA+IDA7Cn07CnZhciBjaGVja05ld05vZGVzID0gZnVuY3Rpb24gKG11dGF0aW9ucykgewogIG11dGF0aW9ucy5mb3JFYWNoICYmIG11dGF0aW9ucy5mb3JFYWNoKGNoZWNrQXR0cmlidXRlKTsKICB2YXIgbmV4dCA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7CiAgaWYgKG5leHQgLSBwcmV2ID4gMTAwMCkgeyAgLy8gRG9uJ3QgbGV0IG1lIHdhaXQgdG9vIGxvbmcuCiAgICBwcmV2ID0gbmV4dDsKICAgIGNsZWFyVGltZW91dCh0aWQpOwogICAgdXBkYXRlKCk7ICAvLyBUaHJvdHRsZSBpcyB3aGF0PwogIH0gZWxzZSBpZiAoIW11dGF0aW9ucy5zb21lIHx8IG11dGF0aW9ucy5zb21lKGNoZWNrKSkgewogICAgY2xlYXJUaW1lb3V0KHRpZCk7CiAgICB0aWQgPSBzZXRUaW1lb3V0KHVwZGF0ZSwgMjAwKTsKICB9Cn07CnZhciBjaGVja0F0dHJpYnV0ZSA9IGZ1bmN0aW9uIChtdXRhdGlvbikgewogIHZhciB0YXJnZXQgPSBtdXRhdGlvbi50YXJnZXQ7CiAgaWYgKHRhcmdldCAmJiB0YXJnZXQubm9kZU5hbWUudG9VcHBlckNhc2UoKSA9PT0gJ0EnICYmCiAgICAgIChtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lIHx8IG11dGF0aW9uLmF0dHJOYW1lKSA9PT0gJ2hyZWYnICYmCiAgICAgIHJlLnRlc3QodGFyZ2V0LmdldEF0dHJpYnV0ZSgnaHJlZicpKSkgewogICAgZGVidWcgJiYgY29uc29sZS5sb2coJ3Jlc3RvcmUgYXR0cmlidXRlJywgdGFyZ2V0Ll94X2lkLCB0YXJnZXQuZ2V0QXR0cmlidXRlKCdocmVmJykpOwogICAgcmVzdG9yZSh0YXJnZXQpOwogIH0KfTsKCnZhciBNdXRhdGlvbk9ic2VydmVyID0gd2luZG93Lk11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luZG93LldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7CgppZiAoTXV0YXRpb25PYnNlcnZlcikgewogIGRlYnVnICYmIGNvbnNvbGUubG9nKCdNdXRhdGlvbk9ic2VydmVyOiB0cnVlJyk7CiAgbmV3IE11dGF0aW9uT2JzZXJ2ZXIoY2hlY2tOZXdOb2Rlcykub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHsKICAgIGNoaWxkTGlzdDogdHJ1ZSwKICAgIGF0dHJpYnV0ZXM6IHRydWUsCiAgICBhdHRyaWJ1dGVGaWx0ZXI6IFsnaHJlZiddLAogICAgc3VidHJlZTogdHJ1ZQogIH0pOwp9IGVsc2UgewogIGRlYnVnICYmIGNvbnNvbGUubG9nKCdNdXRhdGlvbkV2ZW50OiB0cnVlJyk7CiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQXR0ck1vZGlmaWVkJywgY2hlY2tBdHRyaWJ1dGUsIGZhbHNlKTsKICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Ob2RlSW5zZXJ0ZWQnLCBjaGVja05ld05vZGVzLCBmYWxzZSk7Cn0KCn0pLnRvU3RyaW5nKCkubWF0Y2goL3soW1xzXFNdKil9LylbMV0pLmNhbGwodW5zYWZlV2luZG93KTs="},{"name":"百度云插件+APIKey","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/https?\\:\\/\\/(pan|yun)\\.baidu\\.com.*/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":["googleapis.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1484058147371},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/496-%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8F%92%E4%BB%B6-apikey/code/%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8F%92%E4%BB%B6+APIKey.user.js","uuid":"6690c28b-8506-4bc5-8611-76c164755bf7","source":""},{"name":"Kill Baidu AD","options":{"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*://www.baidu.com/*","http*://m.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_connects":[]}},"storage":{"data":{},"ts":1484058147376},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/24192-kill-baidu-ad/code/Kill%20Baidu%20AD.user.js","uuid":"914a0f0b-d382-4e40-b236-a7bda484b3b3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgICBLaWxsIEJhaWR1IEFECi8vIEBuYW1lOnpoLUNOICAgICAgICAg55m+5bqm5bm/5ZGKKOmmluWwvuaOqOW5v+WPiuWPs+S+p+W5v+WRiinmuIXnkIYKLy8gQG5hbWVzcGFjZSAgICAgICAgICBob290aGluCi8vIEB2ZXJzaW9uICAgICAgICAgICAgMC43Ci8vIEBkZXNjcmlwdGlvbiAgICAgICAgSnVzdCBLaWxsIEJhaWR1IEFECi8vIEBkZXNjcmlwdGlvbjp6aC1DTiAg5b275bqV5riF55CG55m+5bqm5pCc57SiKHd3dy5iYWlkdS5jb20p57uT5p6c6aaW5bC+55qE5o6o5bm/5bm/5ZGK44CB5LqM5qyh6aG95Zu65bm/5ZGK5LiO5Y+z5L6n5bm/5ZGK77yM5bm26Ziy5q2i5Y+N5aSNCi8vIEBhdXRob3IgICAgICAgICAgICAgaG9vdGhpbgovLyBAaW5jbHVkZSAgICAgICAgICAgIGh0dHAqOi8vd3d3LmJhaWR1LmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgICAgaHR0cCo6Ly9tLmJhaWR1LmNvbS8qCi8vIEBncmFudCAgICAgICAgICAgICAgbm9uZQovLyBAcnVuLWF0ICAgICAgICAgICAgIGRvY3VtZW50LWJvZHkKLy8gQGxpY2Vuc2UgICAgICAgICAgICBNSVQgTGljZW5zZQovLyBAY29tcGF0aWJsZSAgICAgICAgIGNocm9tZSDmtYvor5XpgJrov4cKLy8gQGNvbXBhdGlibGUgICAgICAgICBmaXJlZm94IOa1i+ivlemAmui/hwovLyBAY29tcGF0aWJsZSAgICAgICAgIG9wZXJhIOacqua1i+ivlQovLyBAY29tcGF0aWJsZSAgICAgICAgIHNhZmFyaSDmnKrmtYvor5UKLy8gQGNvbnRyaWJ1dGlvblVSTCAgICBodHRwczovL3d3dy5wYXlwYWwuY29tL2NnaS1iaW4vd2Vic2NyP2NtZD1fZG9uYXRpb25zJmJ1c2luZXNzPXJpeGl4aUBzaW5hLmNvbSZpdGVtX25hbWU9R3JlYXN5K0ZvcmsrZG9uYXRpb24KLy8gQGNvbnRyaWJ1dGlvbkFtb3VudCAxCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIE11dGF0aW9uT2JzZXJ2ZXIgPSB3aW5kb3cuTXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuV2ViS2l0TXV0YXRpb25PYnNlcnZlciB8fCB3aW5kb3cuTW96TXV0YXRpb25PYnNlcnZlcjsKICAgIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKHJlY29yZHMpewogICAgICAgIGNsZWFyQUQoKTsKICAgIH0pOwogICAgdmFyIG9wdGlvbiA9IHsKICAgICAgICAnY2hpbGRMaXN0JzogdHJ1ZSwKICAgICAgICAnc3VidHJlZSc6IHRydWUKICAgIH07CiAgICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIG9wdGlvbik7CgogICAgZnVuY3Rpb24gY2xlYXJBRCgpewogICAgICAgIHZhciBtQWRzPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5lY193aXNlX2FkLC5lY195b3V4dWFuX2NhcmQiKSxpOwogICAgICAgIGZvcihpPTA7aTxtQWRzLmxlbmd0aDtpKyspewogICAgICAgICAgICB2YXIgbUFkPW1BZHNbaV07CiAgICAgICAgICAgIG1BZC5yZW1vdmUoKTsKICAgICAgICB9CiAgICAgICAgdmFyIGxpc3Q9ZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yQWxsKCIjY29udGVudF9sZWZ0PmRpdiwjY29udGVudF9sZWZ0PnRhYmxlIik7CiAgICAgICAgZm9yKGk9MDtpPGxpc3QubGVuZ3RoO2krKyl7CiAgICAgICAgICAgIGxldCBpdGVtID0gbGlzdFtpXTsKICAgICAgICAgICAgbGV0IHMgPSBpdGVtLmdldEF0dHJpYnV0ZSgic3R5bGUiKTsKICAgICAgICAgICAgaWYgKHMgJiYgL2Rpc3BsYXk6KHRhYmxlfGJsb2NrKVxzIWltcG9ydGFudC8udGVzdChzKSkgewogICAgICAgICAgICAgICAgaXRlbS5yZW1vdmUoKTsKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICB2YXIgc3Bhbj1pdGVtLnF1ZXJ5U2VsZWN0b3IoImRpdj5zcGFuIik7CiAgICAgICAgICAgICAgICBpZihzcGFuICYmIHNwYW4uaW5uZXJIVE1MPT0i5bm/5ZGKIil7CiAgICAgICAgICAgICAgICAgICAgaXRlbS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdmFyIGViID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiI2NvbnRlbnRfcmlnaHQ+dGFibGU+dGJvZHk+dHI+dGQ+ZGl2Iik7CiAgICAgICAgZm9yKGk9MDtpPGViLmxlbmd0aDtpKyspewogICAgICAgICAgICBsZXQgZCA9IGViW2ldOwogICAgICAgICAgICBpZiAoZC5pZCE9ImNvbi1hciIpIHsKICAgICAgICAgICAgICAgIGQucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0pKCk7"},{"name":"Douban Movie Download Search Modify by Louis","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http*://movie.douban.com/subject/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1484058147378},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/8261-douban-movie-download-search-modify-by-louis/code/Douban%20Movie%20Download%20Search%20Modify%20by%20Louis.user.js","uuid":"e220f0c4-7474-492e-b2dd-0a9799ce8e13","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIERvdWJhbiBNb3ZpZSBEb3dubG9hZCBTZWFyY2ggTW9kaWZ5IGJ5IExvdWlzCi8vIEBuYW1lc3BhY2UgICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvODI2MS1kb3ViYW4tbW92aWUtZG93bmxvYWQtc2VhcmNoLW1vZGlmeS1ieS1sb3VpcwovLyBAZGVzY3JpcHRpb24gICAg5Zyo6LGG55Oj55S15b2x6aG16Z2i5re75Yqg6LWE5rqQ5pCc57Si6ZO+5o6l44CCCi8vIEB2ZXJzaW9uICAgICAgICAwLjIwMTcwMTI1Ci8vIEBpbmNsdWRlICAgICAgICBodHRwKjovL21vdmllLmRvdWJhbi5jb20vc3ViamVjdC8qCi8vIEBncmFudCAgICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKZnVuY3Rpb24gYWRkSlF1ZXJ5KGNhbGxiYWNrKSB7CiAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKCJzcmMiLCAiYWJvdXQ6YmxhbmsiKTsKICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgICBzY3JpcHQudGV4dENvbnRlbnQgPSAiKCIgKyBjYWxsYmFjay50b1N0cmluZygpICsgIikoKTsiOwogICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKICAgIH0sIGZhbHNlKTsKICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKfQoKZnVuY3Rpb24gbWFpbigpIHsKICAgIHRyeSB7CiAgICAJdmFyIG1vdmllVGl0bGUgPSBqUXVlcnkoJ2gxIHNwYW46ZXEoMCknKS50ZXh0KCk7CgkJdmFyIHRpdGxlID0gJCgnaHRtbCBoZWFkIHRpdGxlJykudGV4dCgpOwoJICAgIHZhciBrZXl3b3JkMSA9IHRpdGxlLnJlcGxhY2UoICco6LGG55OjKScsICcnICkudHJpbSgpOwoJICAgIHZhciBrZXl3b3JkMiA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5d29yZDEgKTsKCQlqUXVlcnkoJyNpbmZvJykuYXBwZW5kKCc8ZGl2PjxzcGFuIGNsYXNzPSJwbCI+5LiL6L29Ojwvc3Bhbj4gPGEgaHJlZj0iaHR0cDovL3d3dy5iYWlkdS5jb20vcz93ZD0nICsgbW92aWVUaXRsZSArICcrQkRyaXAiIHRhcmdldD0iX2JhbG5rIj7lnKhCYWlkdeS4iuaQnOe0ojwvYT4gLyAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2g/aWU9VVRGLTgmcT0nICsgbW92aWVUaXRsZSArICcrdG9ycmVudCIgdGFyZ2V0PSJfYmFsbmsiPuWcqEdvb2dsZeS4iuaQnOe0ojwvYT4gLyA8YSBocmVmPSJodHRwOi8vc2VhcmNoLm10aW1lLmNvbS9zZWFyY2gvP3E9JyArIGtleXdvcmQyICsgJyIgdGFyZ2V0PSJfYmFsbmsiPuaXtuWFiTwvYT4gLyA8YSBocmVmPSJodHRwOi8vd3d3LnppbXV6dS50di9zZWFyY2gvaW5kZXg/a2V5d29yZD0nICsga2V5d29yZDIgKyAnJnNlYXJjaF90eXBlPSIgdGFyZ2V0PSJfYmFsbmsiPlppbXV6dTwvYT4gLyA8YSBocmVmPSJodHRwOi8vdG9ycmVudHouZXUvc2VhcmNoP2Y9JyArIG1vdmllVGl0bGUgKyAnIiB0YXJnZXQ9Il9iYWxuayI+VG9ycmVudHo8L2E+IC8gPGEgaHJlZj0iaHR0cDovL3RvcnJlbnRwcm9qZWN0LmNvbS8/dD0nICsgbW92aWVUaXRsZSArICciIHRhcmdldD0iX2JhbG5rIj5Ub3JyZW50UHJvamVjdDwvYT4gLyA8YSBocmVmPSJodHRwOi8vd3d3LnRvcnJlbnRraXR0eS5jb20vc2VhcmNoLycgKyBtb3ZpZVRpdGxlICsgJyIgdGFyZ2V0PSJfYmFsbmsiPlRvcnJlbnRLaXR0eTwvYT4gLyA8YSBocmVmPSJodHRwOi8vYmFueXVuZ29uZy5uZXQvc2VhcmNoLycgKyBrZXl3b3JkMiArICcrLmh0bWwiIHRhcmdldD0iX2JhbG5rIj7mkKzov5Dlt6U8L2E+PGJyPjxzcGFuIGNsYXNzPSJwbCI+5a2X5bmVOjwvc3Bhbj4gPGEgaHJlZj0iaHR0cDovL3N1YmhkLmNvbS9zZWFyY2gvJyArIG1vdmllVGl0bGUgKyAnIiB0YXJnZXQ9Il9iYWxuayI+U3ViIEhEPC9hPiAvIDxhIGhyZWY9Imh0dHA6Ly93d3cuemltdWt1Lm5ldC9zZWFyY2g/cT0nICsgbW92aWVUaXRsZSArICciIHRhcmdldD0iX2JhbG5rIj5aaW11a3U8L2E+IC8gPGEgaHJlZj0iaHR0cDovL3d3dy5zdWJvbS5uZXQvc2VhcmNoLycgKyBtb3ZpZVRpdGxlICsgJyIgdGFyZ2V0PSJfYmFsbmsiPlN1Ym9tPC9hPiAvIDxhIGhyZWY9Imh0dHA6Ly93d3cub3BlbnN1YnRpdGxlcy5vcmcvemgvc2VhcmNoMi9zdWJsYW5ndWFnZWlkLWNoaS9tb3ZpZW5hbWUtJyArIG1vdmllVGl0bGUgKyAnIiB0YXJnZXQ9Il9iYWxuayI+T3BlblN1YnM8L2E+IC8gPGEgaHJlZj0iaHR0cDovL3Nob290ZXIuY24vc2VhcmNoLycgKyBtb3ZpZVRpdGxlICsgJyIgdGFyZ2V0PSJfYmFsbmsiPlNob290ZXI8L2E+IC8gPGEgaHJlZj0iaHR0cDovL2Fzc3J0Lm5ldC9zdWIvP3NlYXJjaHdvcmQ9JyArIG1vdmllVGl0bGUgKyAnIiB0YXJnZXQ9Il9iYWxuayI+U2hvb3RlcijkvKopPC9hPjxkaXY+Jyk7CiAgICB9CiAgICBjYXRjaCAoZSkgeyB9Cn0KYWRkSlF1ZXJ5KG1haW4pOw=="},{"name":"网盘提取工具","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1484058147380},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/18733-%E7%BD%91%E7%9B%98%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7/code/%E7%BD%91%E7%9B%98%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7.user.js","uuid":"232e3252-cbb6-40c0-916a-c58aa0a26eae","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnvZHnm5jmj5Dlj5blt6XlhbcKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vd3d3LmZpc2hsZWUubmV0LwovLyBAdmVyc2lvbiAgICAgIDIuNAovLyBAZGVzY3JpcHRpb24gIOWwveWPr+iDveWcqOaUr+aMgeeahOe9keebmO+8iOaWsOa1quW+ruebmOOAgeeZvuW6pue9keebmOOAgTM2MOS6keebmOetie+8ieiHquWKqOi+k+WFpeaPkOWPluegge+8jOecgeWOu+S4i+i9veeahOeDpuaBvOOAggovLyBAYXV0aG9yICAgICAgIOacqOmxvChpRmlzaCkKLy8gQG1hdGNoICAgICAgICAqOi8vKi8qCi8vIEBncmFudCAgICAgICAgdW5zYWZlV2luZG93Ci8vID09L1VzZXJTY3JpcHQ9PQooZnVuY3Rpb24od2luZG93LCBzZWxmLCB1bnNhZmVXaW5kb3cpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciB0aW1lU3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgIHZhciBsb2NhdGlvbiA9IHNlbGYubG9jYXRpb247CiAgICB2YXIgaG9zdCA9IGxvY2F0aW9uLmhvc3Q7CiAgICB2YXIgcGF0aCA9IGxvY2F0aW9uLnBhdGhuYW1lOwogICAgdmFyIGNvZGUsIGlucHV0OwogICAgdmFyIGdldENvZGUgPSBmdW5jdGlvbihydWxlKSB7CiAgICAgICAgY29kZSA9IGxvY2F0aW9uLmhhc2guc2xpY2UoMSwgNSk7CiAgICAgICAgaWYgKChydWxlIHx8IC8oW2EtelxkXXs0fSkvaS5leGVjKGNvZGUpKSkgewogICAgICAgICAgICBjb2RlID0gUmVnRXhwLiQxOwogICAgICAgIH0gZWxzZSBjb2RlID0gbnVsbDsKICAgICAgICByZXR1cm4gY29kZTsKICAgIH07CiAgICBpZiAoKGhvc3QgPT09ICdwYW4uYmFpZHUuY29tJyB8fCBob3N0ID09PSAneXVuLmJhaWR1LmNvbScpKSB7CiAgICAgICAgLy/nmb7luqbkupHnm5gKICAgICAgICBpZiAocGF0aC5pbmRleE9mKCIvc2hhcmUvIikgIT09IC0xICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhY2Nlc3NDb2RlIikgJiYgZ2V0Q29kZSgpKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhY2Nlc3NDb2RlIikudmFsdWUgPSBjb2RlOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3VibWl0QnRuIikuY2xpY2soKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKC9eLipcLnl1bnBhblwuY24kL2kudGVzdChob3N0KSkgewogICAgICAgIC8vMzYw5LqR55uYCiAgICAgICAgaWYgKHNlbGYubG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZigiL2xrLyIpICE9PSAtMSkgewogICAgICAgICAgICBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImlucHV0LnB3ZC1pbnB1dCIpOwogICAgICAgICAgICBpZiAoZ2V0Q29kZSgpICYmIGlucHV0KSB7CiAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IGNvZGU7CiAgICAgICAgICAgICAgICBpbnB1dC5uZXh0RWxlbWVudFNpYmxpbmcuY2xpY2soKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgICAgLy/lhbblroPnvZHnq5nvvIzmo4DmtYvpk77mjqUKICAgICAgICBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJhW2hyZWYqPSdwYW4uYmFpZHUuY29tJ10sIGFbaHJlZio9J3l1bnBhbi5jbiddLCBhW2hyZWYqPSd2ZGlzay53ZWliby5jb20nXSIpKS5mb3JFYWNoKGZ1bmN0aW9uKGxpbmspIHsKICAgICAgICAgICAgdmFyIHR4dCA9IGxpbmsubmV4dFNpYmxpbmcgJiYgbGluay5uZXh0U2libGluZy5ub2RlVmFsdWU7CiAgICAgICAgICAgIHZhciBsaW5rY29kZSA9IC/noIEuKj8oW2EtelxkXXs0fSkvaS5leGVjKHR4dCkgJiYgUmVnRXhwLiQxOwogICAgICAgICAgICBpZiAoIWxpbmtjb2RlKSB7CiAgICAgICAgICAgICAgICB0eHQgPSBsaW5rLnBhcmVudE5vZGUuaW5uZXJUZXh0OwogICAgICAgICAgICAgICAgbGlua2NvZGUgPSAv56CBLio/KFthLXpcZF17NH0pL2kuZXhlYyh0eHQpICYmIFJlZ0V4cC4kMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobGlua2NvZGUpIHsKICAgICAgICAgICAgICAgIHZhciBocmVmID0gbGluay5nZXRBdHRyaWJ1dGUoImhyZWYiKTsKICAgICAgICAgICAgICAgIGxpbmsuc2V0QXR0cmlidXRlKCJocmVmIiwgaHJlZiArICIjIiArIGxpbmtjb2RlKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQogICAgdmFyIHRpbWVFbmQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgIGNvbnNvbGUubG9nKCJb572R55uY5o+Q5Y+W5bel5YW3XSDpk77mjqXlpITnkIblrozmiJDvvIzogJfml7bvvJoiICsgKHRpbWVFbmQgLSB0aW1lU3RhcnQpICsgIuavq+enki4g5aSE55CG5qih5byP77yaRE9N5aSE55CGIik7Cn0pKHdpbmRvdywgd2luZG93LnNlbGYsIHVuc2FmZVdpbmRvdyk7CihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIC8vY29uc3RzLi4uCiAgICB2YXIgQ09ERV9SVUxFX0JBSURVID0gL14oW2EtelxkXXs0fSkkL2k7CiAgICB2YXIgQ09ERV9SVUxFX1lVTlBBTiA9IC9eKFthLXpcZF17NH0pJC9pOwogICAgdmFyIE1BWF9TRUFSQ0hfQ09ERV9SQU5HRSA9IDU7CiAgICAvL2Z1bmN0aW9ucy4uLgogICAgdmFyIHRleHROb2Rlc1VuZGVyID0gZnVuY3Rpb24oZWwpIHsKICAgICAgICB2YXIgbiwgYSA9IFtdLAogICAgICAgICAgICB3YWxrID0gZG9jdW1lbnQuY3JlYXRlVHJlZVdhbGtlcihlbCwgTm9kZUZpbHRlci5TSE9XX1RFWFQsIG51bGwsIGZhbHNlKTsKICAgICAgICB3aGlsZSAoKG4gPSB3YWxrLm5leHROb2RlKCkpKSBhLnB1c2gobik7CiAgICAgICAgcmV0dXJuIGE7CiAgICB9OwogICAgdmFyIGdlbmVyYWxMaW5raWZ5VGV4dCA9IGZ1bmN0aW9uKHRleHQsIGVsZXMsIGluZGV4LCB0ZXN0UmVnLCB2YWxpZGF0ZVJ1bGUpIHsKICAgICAgICB2YXIgbG9vcENvdW50ID0gMCwKICAgICAgICAgICAgb3JpZ2luYWxUZXh0LCBjb2RlLCBtYXRjaCwgdXJsLAogICAgICAgICAgICBsaW5raWZpZWRUZXh0ID0gdGV4dDsKICAgICAgICB3aGlsZSAoKG1hdGNoID0gdGVzdFJlZy5leGVjKHRleHQpKSkgewogICAgICAgICAgICBsb29wQ291bnQrKzsKICAgICAgICAgICAgdXJsID0gKG1hdGNoWzFdIHx8ICJodHRwOi8vIikgKyBtYXRjaFsyXTsKICAgICAgICAgICAgb3JpZ2luYWxUZXh0ID0gbWF0Y2hbMV0gKyBtYXRjaFsyXTsKICAgICAgICAgICAgY29kZSA9IG1hdGNoWzNdIHx8IGZpbmRDb2RlRnJvbUVsZW1lbnRzKGVsZXMsIGluZGV4LCB2YWxpZGF0ZVJ1bGUpIHx8ICIiOwogICAgICAgICAgICBjb25zb2xlLmxvZygiW+e9keebmOaPkOWPluW3peWFt10g5bey5aSE55CG572R55uY5Zyw5Z2A77yMVVJMPSIgKyB1cmwgKyAi77yM5o+Q5Y+W56CBPSIgKyBjb2RlICsgIuaooeW8j++8mlRFWFROT0RFIik7CiAgICAgICAgICAgIGxpbmtpZmllZFRleHQgPSBsaW5raWZpZWRUZXh0LnJlcGxhY2Uob3JpZ2luYWxUZXh0LCAiPGEgaHJlZj0nIiArIHVybCArICIjIiArIGNvZGUgKyAiJyB0YXJnZXQ9J19ibGFuayc+IiArIHVybCArICc8L2E+Jyk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBbbG9vcENvdW50LCBsaW5raWZpZWRUZXh0XTsKICAgIH07CiAgICB2YXIgbGlua2lmeVRleHRCbG9ja0JhaWR1ID0gZnVuY3Rpb24odGV4dCwgZWxlcywgaW5kZXgpIHsKICAgICAgICByZXR1cm4gZ2VuZXJhbExpbmtpZnlUZXh0KHRleHQsIGVsZXMsIGluZGV4LCAvKGh0dHA6XC9cLyk/KCg/OnBhbnx5dW4pXC5iYWlkdVwuY29tXC9zXC8oPzpbYS16XGRdKykpKD86Lio/56CBLio/KFthLXpcZF0rKSk/L2dpLCBDT0RFX1JVTEVfQkFJRFUpOwogICAgfTsKICAgIHZhciBsaW5raWZ5VGV4dEJsb2NrWXVucGFuID0gZnVuY3Rpb24odGV4dCwgZWxlcywgaW5kZXgpIHsKICAgICAgICByZXR1cm4gZ2VuZXJhbExpbmtpZnlUZXh0KHRleHQsIGVsZXMsIGluZGV4LCAvKGh0dHA6XC9cLyk/KHl1bnBhblwuY25cLyg/OlthLXpcZF0rKSkoPzouKj/noIEuKj8oW2EtelxkXSspKT8vZ2ksIENPREVfUlVMRV9ZVU5QQU4pOwogICAgfTsKICAgIHZhciBmaW5kQ29kZUZyb21FbGVtZW50cyA9IGZ1bmN0aW9uKGVsZXMsIGluZGV4LCBydWxlKSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBNQVhfU0VBUkNIX0NPREVfUkFOR0UgJiYgaSA8IGVsZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIHR4dCA9IGVsZXNbaSArIGluZGV4XS50ZXh0Q29udGVudDsKICAgICAgICAgICAgdmFyIGNvZGVSZWcgPSAv56CBLio/KFthLXpcZF0rKS9naTsKICAgICAgICAgICAgdmFyIGNvZGVNYXRjaCA9IGNvZGVSZWcuZXhlYyh0ZXh0KSAmJiBSZWdFeHAuJDE7CiAgICAgICAgICAgIGlmICghY29kZU1hdGNoKSBjb250aW51ZTsKICAgICAgICAgICAgdmFyIGxpbmtUZXN0UmVnID0gLyhodHRwcz86fFwuKG5ldHxjbnxjb218Z292fGNjfG1lKSkvZ2k7CiAgICAgICAgICAgIGlmIChsaW5rVGVzdFJlZy5leGVjKHR4dCkgJiYgbGlua1Rlc3RSZWcubGFzdEluZGV4IDw9IGNvZGVSZWcubGFzdEluZGV4KSB7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAocnVsZS50ZXN0KGNvZGVNYXRjaCkpIHJldHVybiBjb2RlTWF0Y2g7CiAgICAgICAgfQogICAgICAgIHJldHVybiBudWxsOwogICAgfTsKICAgIHZhciBsaW5raWZ5ID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGVsZXMgPSB0ZXh0Tm9kZXNVbmRlcihkb2N1bWVudC5ib2R5KTsKICAgICAgICB2YXIgZWxlLCB0eHQsIGxvb3BDb3VudDsKICAgICAgICB2YXIgcHJvY2Vzc29yID0gWwogICAgICAgICAgICBsaW5raWZ5VGV4dEJsb2NrQmFpZHUKICAgICAgICBdOwogICAgICAgIHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uKGZ1bikgewogICAgICAgICAgICB2YXIgZGF0YSA9IGZ1bih0eHQsIGVsZXMsIGkgKyAxKTsKICAgICAgICAgICAgbG9vcENvdW50ICs9IGRhdGFbMF07CiAgICAgICAgICAgIHR4dCA9IGRhdGFbMV07CiAgICAgICAgfTsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgZWxlID0gZWxlc1tpXTsKICAgICAgICAgICAgaWYgKGVsZS5wYXJlbnROb2RlLnRhZ05hbWUgPT0gJ2EnKSBjb250aW51ZTsKICAgICAgICAgICAgdHh0ID0gZWxlLnRleHRDb250ZW50OwogICAgICAgICAgICBsb29wQ291bnQgPSAwOwogICAgICAgICAgICBwcm9jZXNzb3IuZm9yRWFjaChjYWxsYmFjayk7CiAgICAgICAgICAgIGlmIChsb29wQ291bnQgPiAwKSB7CiAgICAgICAgICAgICAgICB2YXIgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTsKICAgICAgICAgICAgICAgIHNwYW4uaW5uZXJIVE1MID0gdHh0OwogICAgICAgICAgICAgICAgZWxlLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKHNwYW4sIGVsZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9OwogICAgdmFyIHRpbWVTdGFydCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgbGlua2lmeSgpOwogICAgdmFyIHRpbWVFbmQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgIGNvbnNvbGUubG9nKCJb572R55uY5o+Q5Y+W5bel5YW3XSDpk77mjqXlpITnkIblrozmiJDvvIzogJfml7bvvJoiICsgKHRpbWVFbmQgLSB0aW1lU3RhcnQpICsgIuavq+enki4g5aSE55CG5qih5byP77yaVEVYVE5PREXlpITnkIYiKTsKfSkoKTs="},{"name":"Easy offline","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http*://www.baidu.*","http*://www.google.*","http*://www.bing.*"],"orig_includes":["http*://*/*","http*://pan.baidu.com/*","http*://115.com/*","https://www.furk.net/*","https://www.seedr.cc/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1484058147385},"enabled":false,"position":7,"file_url":"https://greasyfork.org/scripts/22590-%E4%B8%80%E9%94%AE%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD/code/%E4%B8%80%E9%94%AE%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD.user.js","uuid":"8ec03493-e608-464e-b8c9-497c429e31fb","source":""}]}